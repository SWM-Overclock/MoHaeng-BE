name: Dev Deployment

on:
  push:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: Build image
        run: docker build . -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DEV_DOCKERHUB_REPOSITORY_NAME }}:${{ secrets.IMAGE_TAG }}

      - name: Docker login
        run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Push image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DEV_DOCKERHUB_REPOSITORY_NAME }}:${{ secrets.IMAGE_TAG }}

      - name: Copy Docker files
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DEV_SSH_IP }}
          username: ${{ secrets.DEV_SSH_USERNAME }}
          key: ${{ secrets.DEV_SSH_KEY }}
          port: ${{ secrets.DEV_SSH_PORT }}
          source: 'docker-compose.yml'
          target: 'compose'
          rm: true

      - name: SSH remote and Run Docker Compose
        uses: appleboy/ssh-action@master
        env:
          SPRING_DATABASE_SCHEMA: ${{ secrets.DEV_SPRING_DATABASE_SCHEMA }}
          SPRING_DATABASE_USERNAME: ${{ secrets.DEV_SPRING_DATABASE_USERNAME }}
          SPRING_DATABASE_PASSWORD: ${{ secrets.DEV_SPRING_DATABASE_PASSWORD }}
          SPRING_DATABASE_HOST: ${{ secrets.DEV_SPRING_DATABASE_HOST }}
          IMAGE_TAG: ${{ secrets.IMAGE_TAG }}
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_REPOSITORY_NAME: ${{ secrets.DEV_DOCKERHUB_REPOSITORY_NAME }}
        with:
          host: ${{ secrets.DEV_SSH_IP }}
          username: ${{ secrets.DEV_SSH_USERNAME }}
          key: ${{ secrets.DEV_SSH_KEY }}
          port: ${{ secrets.DEV_SSH_PORT }}
          envs: SPRING_DATABASE_SCHEMA,SPRING_DATABASE_USERNAME,SPRING_DATABASE_PASSWORD,SPRING_DATABASE_HOST,IMAGE_TAG,DOCKERHUB_USERNAME,DOCKERHUB_REPOSITORY_NAME
          script: |
            cd compose
            sudo touch .env
            sudo echo "
            SPRING_DATABASE_SCHEMA=$SPRING_DATABASE_SCHEMA
            SPRING_DATABASE_USERNAME=$SPRING_DATABASE_USERNAME
            SPRING_DATABASE_PASSWORD=$SPRING_DATABASE_PASSWORD
            SPRING_DATABASE_HOST=$SPRING_DATABASE_HOST
            IMAGE_TAG=$IMAGE_TAG
            DOCKERHUB_USERNAME=$DOCKERHUB_USERNAME
            DOCKERHUB_REPOSITORY_NAME=$DOCKERHUB_REPOSITORY_NAME" | sudo tee .env
            sudo docker pull $DOCKERHUB_USERNAME/$DOCKERHUB_REPOSITORY_NAME:$IMAGE_TAG
            sudo docker-compose down
            sudo docker-compose up -d